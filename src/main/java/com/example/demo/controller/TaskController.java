package com.example.demo.controller;



import com.example.demo.mapper.TaskListMapper;
import com.example.demo.mapper.TaskMapper;
import com.example.demo.model.Task;
import com.example.demo.model.TaskList;
import com.example.demo.model.User;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import org.springframework.beans.factory.annotation.Autowired;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.websocket.server.PathParam;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

@Controller
public class TaskController {
  // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    //private TaskRepository userRepository;
    @Autowired
    private TaskMapper taskMapper;

    @Autowired
    private TaskListMapper taskListMapper;

    @GetMapping("/greeting")
    public String greetingForm(Model model) {
       // model.addAttribute("user",new Task());
        return "greeting";
    }

    @PostMapping("/greeting")
    public String greetingSubmit(@ModelAttribute Task task,HttpServletRequest request,Model model) {
        ServletContext servletContext=request.getSession(true).getServletContext();
        User user= (User) servletContext.getAttribute("user");
        Integer currentIndex= (Integer) servletContext.getAttribute("currentIndex");
        System.out.println(currentIndex);
        System.out.println(user);
        Task newTask = new Task();
        newTask.setId(user.getId());
        newTask.setTask_index(currentIndex);
        newTask.setTask_name(task.getTask_name());
        newTask.setTask_context(task.getTask_context());
        newTask.setTask_type("undone");
        Date date = new Date();
        SimpleDateFormat df = new SimpleDateFormat("yyyy.MM.dd HH:mm:ss:SSS");
        newTask.setCreate_time(df.format(date));
        newTask.setUpdate_time(df.format(date));
        System.out.println(newTask);
        taskMapper.save(newTask);
        model.addAttribute("task",newTask);
        System.out.println(newTask);
        return "result";

    }

    @GetMapping("/all")
    public String getMessage(Model model) {
       Iterable<Task> tasks = taskMapper.findAll();
        model.addAttribute("tasks", tasks);
        return "all";
    }



    @RequestMapping(value ="/findOneTaskList/{task_index}",method =RequestMethod.GET)
    public String findOne(@PathVariable Integer task_index, HttpServletRequest request){
        ServletContext servletContext=request.getSession(true).getServletContext();
        User user= (User) servletContext.getAttribute("user");
        System.out.println(user);
        System.out.println(task_index);
        TaskList taskList=taskListMapper.findOneTaskList(user.getId(),task_index);
        System.out.println(taskList);
        List<Task> tasks= taskMapper.getTask(user.getId(),taskList.getTask_index());
        System.out.println(tasks);
        servletContext.setAttribute("firstTaskList",taskList);
        servletContext.setAttribute("tasks",tasks);
        servletContext.setAttribute("currentIndex",task_index);
        return "test";
}

    @RequestMapping("/test")
    public String test(HttpServletRequest request){
        ServletContext servletContext=request.getSession(true).getServletContext();

        List<Task> tasks1= (List<Task>) servletContext.getAttribute("tasks");
        System.out.println(tasks1);
        return "test";
    }

    @RequestMapping("/addTaskList")
    public String addTaskList(HttpServletRequest request){
        ServletContext servletContext=request.getSession(true).getServletContext();
        User user= (User) servletContext.getAttribute("user");
        List<TaskList> taskList=taskListMapper.findTaskList(user.getId());
        int index=taskList.size()+1;
        TaskList taskList1=new TaskList(user.getId(),index,"第"+index+"个列表");
        taskListMapper.addTaskList(taskList1);
        taskList=taskListMapper.findTaskList(user.getId());
        servletContext.setAttribute("taskList",taskList);
        return "test";
    }

    @RequestMapping(value ="/getCurrentTask/{task_id}",method =RequestMethod.GET)
    public String getCurrentTask(@PathVariable Integer task_id, HttpServletRequest request){
        ServletContext servletContext=request.getSession(true).getServletContext();
        User user= (User) servletContext.getAttribute("user");
        System.out.println(user);
        Task task=taskMapper.findByIDTask(task_id);
        servletContext.setAttribute("currentTask",task);

        return "test";
    }



}